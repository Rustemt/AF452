@model ProductAttributeModel

@using Telerik.Web.Mvc.UI;

@Html.ValidationSummary(false)
@Html.HiddenFor(model => model.Id)
@Html.Telerik().TabStrip().Name("productattribute-edit").Items(x =>
{
    x.Add().Text(T("Admin.Catalog.Attributes.SpecificationAttributes.Info").Text).Content(TabInfo().ToHtmlString()).Selected(true);
    x.Add().Text(T("Admin.Catalog.Attributes.SpecificationAttributes.Options").Text).Content(TabOptions().ToHtmlString());
})
@helper TabInfo()
    { 
    @(
    
 Html.LocalizedEditor<ProductAttributeModel, ProductAttributeLocalizedModel>("productattribute-localized",
     @<table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.Locales[item].Name):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => Model.Locales[item].Name)
                @Html.ValidationMessageFor(model => model.Locales[item].Name)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.Locales[item].Description):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.Locales[item].Description, "RichEditor")
                @Html.ValidationMessageFor(model => model.Locales[item].Description)
            </td>
        </tr>
        <tr>
            <td colspan="2">
                @Html.HiddenFor(model => model.Locales[item].LanguageId)
            </td>
        </tr>
    </table>
    ,
    @<table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.Name):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.Description):
            </td>
            <td class="adminData">
                @Html.EditorFor(x => x.Description, "RichEditor")
                @Html.ValidationMessageFor(model => model.Description)
            </td>
        </tr>
    </table>
)

    )

    
        }


@helper TabOptions()
    { 
        if (Model.Id > 0)
        {
            <table class="adminContent">
                <tr>
                    <td>
                        @(Html.Telerik().Grid<ProductAttributeOptionModel>()
                        .Name("productattributeoptions-grid")
                            .DataKeys(x =>
                            {
                                x.Add(y => y.Id).RouteKey("optionId");
                                x.Add(y => y.ProductAttributeId).RouteKey("productAttributeId");
                            })
                            .Columns(columns =>
                            {
                                columns.Bound(x => x.Name)
                                    .Width(300);
                                //TODO display localized values here
                                columns.Bound(x => x.DisplayOrder)
                                    .Width(100)
                                    .Centered();
                                columns.Bound(x => x.Id)
                                    .Width(50)
                                    .Centered()
                                    .ClientTemplate("<input type='submit' id='btnEditOption<#= Id #>' name='btnEditOption<#= Id #>' value='Edit' onclick=\"" + "javascript:OpenWindow('" + @Url.Content("~/afcockpit/ProductAttribute/OptionEditPopup/") + "<#= Id #>?btnId=btnRefresh&formId=productattribute-form', 800, 250, true); return false;\" class='t-button' />")
                                    .Title(T("Admin.Common.Edit").Text);
                                columns.Command(commands =>
                                {
                                    commands.Delete();
                                })
                                .Width(50)
                                .Title(T("Admin.Common.Delete").Text);
                            })
                            .DataBinding(dataBinding =>
                        dataBinding.Ajax().Select("OptionList", "ProductAttribute", new { productAttributeId = Model.Id })
                        .Delete("OptionDelete", "ProductAttribute"))
                            .EnableCustomBinding(true))
                    </td>
                </tr>
                <tr>
                    <td width="100%">
                        <input type="submit" id="btnAddNewOption" name="btnAddNewOption" value="@T("Admin.Catalog.Attributes.SpecificationAttributes.Options.AddNew")" onclick="javascript:OpenWindow('@(Url.Action("OptionCreatePopup", "ProductAttribute", new { productAttributeId = Model.Id, btnId = "btnRefresh", formId = "productattribute-form" }))', 800, 250, true); return false;" class="t-button" />
                        <input type="submit" id="btnRefresh" name="btnRefresh" style="display: none" />
                        <script type="text/javascript">
                            $(document).ready(function () {
                                $('#btnRefresh').click(function () {
                                    //refresh grid
                                    var optionsGrid = $("#productattributeoptions-grid");
                                    optionsGrid.data('tGrid').ajaxRequest();

                                    //return false to don't reload a page
                                    return false;
                                });
                            });
                        </script>
                    </td>
                </tr>
            </table>
        }
        else
        {
            @T("Admin.Catalog.Attributes.SpecificationAttributes.Options.SaveBeforeEdit")
        }
    }